#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.1 on Sat May 24 14:19:21 2025
#

import wx

# begin wxGlade: dependencies
import wx.adv
# end wxGlade
import datetime
import re
# begin wxGlade: extracode
# end wxGlade

class DateSelector(wx.Panel):
    def __init__(self, parent):
        super().__init__(parent)

        self.sizer = wx.BoxSizer(wx.VERTICAL)
        # Краткий выбор даты (как в HTML)
        self.date_picker = wx.adv.DatePickerCtrl(self, style=wx.adv.DP_DROPDOWN | wx.adv.DP_SHOWCENTURY)
        self.sizer.Add(self.date_picker, 0, wx.ALL | wx.EXPAND, 5)
        self.date_picker.Bind(wx.adv.EVT_DATE_CHANGED, self.sync_from_picker)
        
    def sync_from_calendar(self, event):
        self.date_picker.SetValue(self.calendar.GetDate())

    def sync_from_picker(self, event):
        self.calendar.SetDate(self.date_picker.GetValue())

    def GetDate(self):
        return self.date_picker.GetValue()

class DateSelector(wx.Panel):
    def __init__(self, parent):
        super().__init__(parent)

        self.sizer = wx.BoxSizer(wx.VERTICAL)

        # Краткий выбор даты (как в HTML)
        self.date_picker = wx.adv.DatePickerCtrl(self, style=wx.adv.DP_DROPDOWN | wx.adv.DP_SHOWCENTURY)
        self.sizer.Add(self.date_picker, 0, wx.ALL | wx.EXPAND, 5)

        # Подробный календарь (изначально скрыт)
        self.calendar = wx.adv.GenericCalendarCtrl(self)
        self.calendar.Hide()
        self.sizer.Add(self.calendar, 0, wx.ALL | wx.EXPAND, 5)

        # Кнопка переключения
        self.toggle_btn = wx.Button(self, label="Расширенный выбор...")
        self.toggle_btn.Bind(wx.EVT_BUTTON, self.toggle_calendar)
        self.sizer.Add(self.toggle_btn, 0, wx.ALL | wx.ALIGN_LEFT, 5)

        self.SetSizer(self.sizer)

        # Синхронизация дат
        self.calendar.Bind(wx.adv.EVT_CALENDAR_SEL_CHANGED, self.sync_from_calendar)
        self.date_picker.Bind(wx.adv.EVT_DATE_CHANGED, self.sync_from_picker)

    def toggle_calendar(self, event):
        if self.calendar.IsShown():
            self.calendar.Hide()
            self.toggle_btn.SetLabel("Расширенный выбор...")
        else:
            self.calendar.Show()
            self.toggle_btn.SetLabel("Скрыть календарь")
        self.Layout()

    def sync_from_calendar(self, event):
        self.date_picker.SetValue(self.calendar.GetDate())

    def sync_from_picker(self, event):
        self.calendar.SetDate(self.date_picker.GetValue())

    def GetDate(self):
        return self.date_picker.GetValue()

class User():
    def __init__(self, name : str, sex: str, borth : datetime) -> None:
        self.name = name
        self.sex = sex
        self.borth = borth
        pass
    def get_name(self):
        return self.name
    def get_sex(self):
        return self.sex
    def get_bortrh(self):
        return self.borth
    def __str__(self) -> str:
        return self.name + " " + self.sex + " " + str(self.borth)  
    
def create_user(name : str, sex: str, borth : str) -> User:
    return User(name, sex, borth)

class Registration(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Registration.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 550 ))
        self.SetTitle("Регистрация")
        self.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.SetFont(wx.Font(12, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "MS Reference Sans Serif"))

        grid_sizer_1 = wx.FlexGridSizer(6, 1, 2, 2)

        sizer_4 = wx.FlexGridSizer(6, 1, 0, 0)
        grid_sizer_1.Add(sizer_4, 1, wx.ALIGN_CENTER, 0)

        label_3 = wx.StaticText(self, wx.ID_ANY, u"Фамилия")
        label_3.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DDKSHADOW))
        sizer_4.Add(label_3, 0, 0, 0)
        
        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, u"", style=wx.TE_PROCESS_ENTER)
        self.text_ctrl_1.SetMinSize((300, 35))
        self.text_ctrl_1.SetBackgroundColour(wx.Colour(204, 50, 50))
        self.text_ctrl_1.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_BTNHIGHLIGHT))
        self.text_ctrl_1.SetFont(wx.Font(16, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_4.Add(self.text_ctrl_1, 2, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 10)

        label_4 = wx.StaticText(self, wx.ID_ANY, u"Имя")
        label_4.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DDKSHADOW))
        sizer_4.Add(label_4, 0, 0, 0)

        self.text_ctrl_2 = wx.TextCtrl(self, wx.ID_ANY, u"", style=wx.TE_PROCESS_ENTER)
        self.text_ctrl_2.SetMinSize((300, 35))
        self.text_ctrl_2.SetBackgroundColour(wx.Colour(204, 50, 50))
        self.text_ctrl_2.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_BTNHIGHLIGHT))
        self.text_ctrl_2.SetFont(wx.Font(16, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_4.Add(self.text_ctrl_2, 2, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 10)

        label_5 = wx.StaticText(self, wx.ID_ANY, u"Отчество")
        label_5.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DDKSHADOW))
        sizer_4.Add(label_5, 0, 0, 0)
        
        
        self.text_ctrl_3 = wx.TextCtrl(self, wx.ID_ANY, u"", style=wx.TE_PROCESS_ENTER)
        self.text_ctrl_3.SetMinSize((300, 35))
        self.text_ctrl_3.SetBackgroundColour(wx.Colour(204, 50, 50))
        self.text_ctrl_3.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_BTNHIGHLIGHT))
        self.text_ctrl_3.SetFont(wx.Font(16, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_4.Add(self.text_ctrl_3, 2, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 10)
        
        
        label_1 = wx.StaticText(self, wx.ID_ANY, u"Пол")
        label_1.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DDKSHADOW))
        label_1.SetFont(wx.Font(14, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "MS Reference Sans Serif"))
        grid_sizer_1.Add(label_1, 0, wx.ALIGN_CENTER, 0)

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_1, 1, wx.ALIGN_CENTER | wx.ALL, 10)

        self.radio_box_1 = wx.RadioBox(self, wx.ID_ANY, "", choices=[u"Мужской", u"Женский"], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.radio_box_1.SetSelection(0)
        sizer_1.Add(self.radio_box_1, 0, 0, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1.Add(sizer_2, 1, wx.ALIGN_CENTER | wx.ALL, 10)

        label_2 = wx.StaticText(self, wx.ID_ANY, u"Дата рождения", style=wx.ALIGN_CENTER_HORIZONTAL)
        label_2.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_3DDKSHADOW))
        label_2.SetFont(wx.Font(14, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "MS Reference Sans Serif"))
        sizer_2.Add(label_2, 0, 0, 0)

        self.generic_calendar_ctrl_1 = DateSelector(self)
        self.generic_calendar_ctrl_1.SetFont(wx.Font(9, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "MS Reference Sans Serif"))
        self.generic_calendar_ctrl_1.SetMinSize(wx.Size(200, 30))
        grid_sizer_1.Add(self.generic_calendar_ctrl_1, 2, wx.ALIGN_CENTER | wx.ALL, 10)

        self.button_1 = wx.Button(self, wx.ID_ADD, u"Подтвердить")
        self.button_1.SetBackgroundColour(wx.Colour(204, 50, 50))
        self.button_1.SetForegroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_BTNHIGHLIGHT))
        self.button_1.SetFont(wx.Font(14, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "MS Reference Sans Serif"))
        grid_sizer_1.Add(self.button_1, 2, wx.ALIGN_CENTER | wx.ALL, 10)

        grid_sizer_1.AddGrowableCol(0)
        self.SetSizer(grid_sizer_1)
        
        ### Привязка событий
        self.button_1.Bind(wx.EVT_BUTTON, self.on_confirm)
        
        self.Layout()
        # end wxGlade
    def on_confirm(self, event):
        # Оставляем от имени только буквы, создаём шаблон для записи, где первая буква - заглавная, остальные маленькие
        name = self.text_ctrl_1.GetValue().strip().capitalize() + " " + self.text_ctrl_2.GetValue().strip().capitalize() + " " + self.text_ctrl_3.GetValue().strip().capitalize()
        if (len(name) == 2):
            wx.MessageBox("Есть пустое поле в ФИО", "Ошибка", wx.ICON_ERROR)
            return
        if ( (datetime.date.today().year -  self.generic_calendar_ctrl_1.GetDate().year - (
            datetime.date.today().month < self.generic_calendar_ctrl_1.GetDate().month+1 or (
                datetime.date.today().month == self.generic_calendar_ctrl_1.GetDate().month+1 and 
                datetime.date.today().day < self.generic_calendar_ctrl_1.GetDate().day
            )
            )) < 8):
            wx.MessageBox("Соревнования доступны от 8 лет", "Ошибка", wx.ICON_ERROR)
            return

        sex = "Мужской" if self.radio_box_1.GetSelection() == 0 else "Женский"
    
        birth_date = self.generic_calendar_ctrl_1.GetDate()
        birth_str = birth_date.FormatISODate()  # Преобразуем в строку YYYY-MM-DD

        user = create_user(name, sex, birth_str)

        if user:
            wx.MessageBox(f"Пользователь создан: {user}", "Успех", wx.ICON_INFORMATION)
            self.Close()
        else:
            wx.MessageBox("Ошибка ввода данных", "Ошибка", wx.ICON_ERROR)
# end of class Registration

class MyApp(wx.App):
    def OnInit(self):
        self.frame = Registration(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
